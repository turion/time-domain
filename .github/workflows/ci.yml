on: [pull_request]
name: build
jobs:

  generateMatrix:
    name: "Generate matrix from cabal"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: ubuntu-latest
    steps:
      - uses: kleidukos/get-tested@v0.1.7.0
        id: set-matrix
        with:
          cabal-file: "time-domain.cabal"
          ubuntu: true
          version: 0.1.7.0

  build:
    runs-on: ubuntu-latest
    needs: generateMatrix
    strategy:
      matrix: ${{ fromJSON(needs.generateMatrix.outputs.matrix) }}
    name: Haskell GHC ${{ matrix.ghc }} cabal
    steps:
      - uses: actions/checkout@v4

      - uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc }}

      - name: Configure the build
        run: |
          cabal configure --enable-tests --enable-benchmarks --disable-documentation
          cabal build all --dry-run
        # The last step generates dist-newstyle/cache/plan.json for the cache key.

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies
        # If we had an exact cache hit, the dependencies will be up to date.
        if: steps.cache.outputs.cache-hit != 'true'
        run: cabal build all --enable-tests --enable-benchmarks --only-dependencies

      # Cache dependencies already here, so that we do not have to rebuild them should the subsequent steps fail.
      - name: Save cached dependencies
        uses: actions/cache/save@v4
        # If we had an exact cache hit, trying to save the cache would error because of key clash.
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: Cabal build dependencies
        run: |
          cabal build all  --enable-tests --only-dependencies
      - name: Cabal build packages
        run: |
          cabal build all --enable-tests -fdev
      - name: Cabal test
        run: |
          cabal test all --enable-tests --test-show-details=Always -fdev
